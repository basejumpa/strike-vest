//////////////////////////////////////////////////////////////////////////////
/// Strike Vest
///
/// Strike Vest Â© 2024 by Alexander Mann-Wahrenberg (basejumpa)
/// is licensed under [CC BY-SA 4.0].
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <string>
#include <vector>

#include <WiFi.h>
#include <DNSServer.h>


///////////////////////////////////////////////////////////////////////////////
/// Configuration
///////////////////////////////////////////////////////////////////////////////

struct cfg_wifi_t {
    String ssid;
};

struct cfg_dns_t {
    uint32_t ttl;
    uint16_t port;
    String domain_name;
};

struct cfg_strike_vest_t {
    cfg_wifi_t wifi;
    cfg_dns_t dns;
};

const cfg_strike_vest_t cfg = {
    {
        "StrikeVest" ///< ssid
    },
    {
        3600, ///< TTL
        53, ///< port,
    }
};



///////////////////////////////////////////////////////////////////////////////
/// Implementation
///////////////////////////////////////////////////////////////////////////////

DNSServer dnsServer; ///< Create a Domain Name System (DNS) Server

std::vector<std::string> userInputList;  ///< Vector to store user input

void setup()
{
  /// Set up a visible hotspot w/o password
  WiFi.mode(WIFI_MODE_AP);
  WiFi.softAP(cfg.wifi.ssid);

  /// Set up the DNS server
  dnsServer.setTTL(cfg.dns.ttl);
  dnsServer.start(cfg.dns.port, "*", IPAddress(4,3,2,1));
}

void loop()
{

}

///////////////////////////////////////////////////////////////////////////////
/// EOF
///////////////////////////////////////////////////////////////////////////////
